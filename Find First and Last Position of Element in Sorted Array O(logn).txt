/*
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.
*/

#include<iostream>
using namespace std;

void firstlastocc(int arr[],int n,int ans[]){
	int target;
	cout<<"Enter the number for which you have to find first and last position "<<endl;
	cin>>target;
	
	int low=0,high=n-1;
	while(low<=high){
		int mid=(low+high)/2;
		if(target==arr[mid]){
			ans[0]=mid;
			high=mid-1;
		}
		else if(target>arr[mid])
			low=mid+1;
		else
			high=mid-1;
	}
	
	low=0; high=n-1;
	while(low<=high){
		int mid=(low+high)/2;
		if(target==arr[mid]){
			ans[1]=mid;
			low=mid+1;
		}
		else if(target>arr[mid])
			low=mid+1;
		else
			high=mid-1;
	}
}

int main(){
	int n,arr[100];
	int ans[]={-1,-1};
	cout<<"Enter the size of the array"<<endl;
	cin>>n;
	
	cout<<"Enter the elements in the array"<<endl;
	for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	
	firstlastocc(arr,n,ans);
	for(int i=0;i<2;i++){
		cout<<ans[i]<<" ";
	}
}